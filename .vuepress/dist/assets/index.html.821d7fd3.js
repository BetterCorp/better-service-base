import{_ as n,d as s}from"./app.5f1a8df7.js";const a={},e=s(`<h1 id="bsb-development" tabindex="-1"><a class="header-anchor" href="#bsb-development" aria-hidden="true">#</a> BSB Development</h1><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about" aria-hidden="true">#</a> About</h2><p>Config management is handled in the background and there isn&#39;t any way to make config changes during a run.<br> Any changes to the config will require a service restart in order to pickup the changes.<br> When running in debug mode (<code>npm run dev</code>), changes to the <code>sec.config.json</code> file will automatically restart the service.</p><h2 id="the-sec-config-json-file" tabindex="-1"><a class="header-anchor" href="#the-sec-config-json-file" aria-hidden="true">#</a> The <code>sec.config.json</code> file</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;identity&quot;</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;debug&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;deploymentProfiles&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;{deployment profile name}&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;{plugin name}&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;mappedName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{name of the plugin as mapped}&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token boolean">true</span>/<span class="token boolean">false</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;{name of the plugin as mapped}&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;prefetch&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
      <span class="token property">&quot;endpoint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;amqp://localhost&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;credentials&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;uniqueId&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>Mapped plugin names allow you to run multiple plugins with different names when using a central config file.<br> Example: <code>fastify</code> mapped to <code>web</code></p><p>Thus a single sec.config file can have multiple configs for fastify, but with different names with different configs.</p><h2 id="bsb-config-plugins" tabindex="-1"><a class="header-anchor" href="#bsb-config-plugins" aria-hidden="true">#</a> BSB Config Plugins</h2><h3 id="_1password" tabindex="-1"><a class="header-anchor" href="#_1password" aria-hidden="true">#</a> <a href="/Config/1Password">1Password</a></h3>`,9);function p(t,o){return e}var c=n(a,[["render",p],["__file","index.html.vue"]]);export{c as default};
