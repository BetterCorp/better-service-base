import{_ as s,r as t,o,c as i,a as e,b as l,F as c,d as n,e as r}from"./app.5f1a8df7.js";const p={},u=n('<h1 id="better-service-base-aka-bsb" tabindex="-1"><a class="header-anchor" href="#better-service-base-aka-bsb" aria-hidden="true">#</a> Better-Service-Base (aka. BSB)</h1><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about" aria-hidden="true">#</a> About</h2><p>BSB was designed to be a simple, expandable and server agnostic platform for simple, scalable microservice projects.</p><p>Each plugin builds a docker image that can be deployed quickly.</p><p>The BSB base docker image contains the default config/event libraries for quick deployment.</p><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>',6),d={href:"https://hub.docker.com/r/betterweb/service-base",target:"_blank",rel:"noopener noreferrer"},h=r("betterweb/service-base"),b=n(`<p>This is the base docker image that is kept up to date with the basic event/config/logging plugins.</p><h3 id="plugins-included" tabindex="-1"><a class="header-anchor" href="#plugins-included" aria-hidden="true">#</a> Plugins included</h3><p>Events:</p><ul><li><a href="/Events/RabbitMQ">RabbitMQ</a></li><li><a href="/Events/Pubnub">Pubnub</a></li></ul><p>Config:</p><ul><li><a href="/Config/1Password">1Password</a></li></ul><p>Logging:</p><ul><li><a href="/Logging/Gelf">Gelf</a></li></ul><h3 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a> Environment variables</h3><ul><li>APP_DIR = <code>./</code></li></ul><p>Defaults to the current CWD if not set. Allows you to change the working directory of the project (ideal to customize where the service looks for plugins)</p><ul><li>BSB_LIVE = <code>(not set - set to true to force live mode / leave empty for debug or non-production)</code></li></ul><p>Defines if the service is running on production/live mode When not running in production mode, debug is enabled by default vs disabled when running in production.</p><ul><li>BSB_SEC_JSON = <code>./sec.config.json</code></li></ul><p>Defines a specific path (full path) to the <code>sec.config.json</code> configuration file if you are using one. (read/write when running non-live)</p><ul><li>BSB_CONFIG_OBJECT = <code>(not set)</code></li></ul><p>Allows you to pass the config object is serialized json directly to the service instead of using a json file / config plugin.</p><ul><li>BSB_FORCE_DEBUG = <code>(not set - set to true to force debug mode in production / leave empty for false)</code></li></ul><p>Forced debug mode when deubgging in production.</p><ul><li>BSB_PROFILE = <code>default</code></li></ul><p>Sets the deployment profile of the service. This makes it easy to use a single <code>sec.config.json</code> file, to centralize config for multiple plugins/services, while just controlling which service runs in specific containers.</p><ul><li>BSB_CONFIG_PLUGIN = <code>(not set)</code></li></ul><p>Defines the config plugin to use. When not set, it will use <code>BSB_CONFIG_OBJECT</code> then <code>BSB_SEC_JSON</code> then the default <code>sec.config.json</code> file/objects respectively.</p><p>The config plugin is the only plugin that may have additional environment variables to set. The rest of the plugins configuration is set in the <code>sec.config.json</code> file or other configuration locations respectively.</p><h2 id="deployment" tabindex="-1"><a class="header-anchor" href="#deployment" aria-hidden="true">#</a> Deployment</h2><p>An example docker compose file for a service.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>  <span class="token key atrule">payfast</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> betterweb/service<span class="token punctuation">-</span>base<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span><span class="token punctuation">{</span>plugin<span class="token punctuation">-</span>name<span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token punctuation">{</span>plugin<span class="token punctuation">-</span>version<span class="token punctuation">}</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime<span class="token punctuation">:</span>ro
      <span class="token punctuation">-</span> /home/bsb/config.json<span class="token punctuation">:</span>/home/app/sec.config.json<span class="token punctuation">:</span>ro
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> BSB_LIVE=true
      <span class="token punctuation">-</span> BSB_PROFILE=service1
    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>
      <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>
      <span class="token key atrule">update_config</span><span class="token punctuation">:</span>
        <span class="token key atrule">parallelism</span><span class="token punctuation">:</span> <span class="token number">1</span>
        <span class="token key atrule">order</span><span class="token punctuation">:</span> start<span class="token punctuation">-</span>first
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>A server running docker (docker swarm/kubernetes/nomad)</li><li>An events service (should you want to run more than 1 service...) <ul><li>Example: RabbitMQ</li></ul></li></ul><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting started</h2><ul><li>run the docker image with the required configuration.</li></ul><p>Look at <a href="/Plugins">Plugins</a> for the already made list of plugins and how to use them</p>`,32);function f(g,m){const a=t("ExternalLinkIcon");return o(),i(c,null,[u,e("p",null,[e("a",d,[h,l(a)])]),b],64)}var v=s(p,[["render",f],["__file","index.html.vue"]]);export{v as default};
