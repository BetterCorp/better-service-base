[
  {
    "name": "@bettercorp/service-base-plugin-payfast",
    "version": "4.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-payfast",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-payfast",
        "def": {
          "key": "service-payfast",
          "name": "PayFast",
          "icon": "payfast.png",
          "description": "PayFast payment gateway",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-payfast",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-payfast/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-payfast"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-payfast"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-payfast"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-payfast/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-payfast/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-payfast"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-payfast"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-payfast"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-payfast"
            }
          ]
        },
        "config": {
          "interfaceName": "PayfastPluginConfig",
          "definitions": {
            "adhocUrl": {
              "type": "string",
              "required": true,
              "name": "Payfast Adhoc URL",
              "description": null
            },
            "liveUrl": {
              "type": "string",
              "required": true,
              "name": "Payfast Live URL",
              "description": null
            },
            "sandboxUrl": {
              "type": "string",
              "required": true,
              "name": "Payfast Sandbox URL",
              "description": null
            },
            "commsToken": {
              "type": "string",
              "required": true,
              "name": "Comms Token",
              "description": "** Special encryption token"
            },
            "commsTokenIV": {
              "type": "string",
              "required": true,
              "name": "Comms Token IV",
              "description": "** Special encryption token"
            },
            "myHost": {
              "type": "string",
              "required": true,
              "name": "My Host",
              "description": "like https"
            },
            "itnPath": {
              "type": "string",
              "required": true,
              "name": "My ITN Path",
              "description": "Allows you to change the ITN path"
            },
            "sandboxConfig": {
              "type": "PayfastSandboxConfig",
              "required": true,
              "name": "Sandbox Config",
              "description": "Default/test config"
            }
          },
          "extraDefinitions": {
            "PayfastSandboxConfig": {
              "merchantId": {
                "type": "string",
                "required": true,
                "name": "Merchant ID",
                "description": null
              },
              "merchantKey": {
                "type": "string",
                "required": true,
                "name": "Merchant Key",
                "description": null
              },
              "passphrase": {
                "type": "string",
                "required": false,
                "name": "Passphrase / Secret Key",
                "description": null
              }
            }
          },
          "defaultValues": {
            "adhocUrl": "https://api.payfast.co.za/subscriptions/{TOKEN}/adhoc",
            "liveUrl": "https://www.payfast.co.za/eng/process",
            "sandboxUrl": "https://sandbox.payfast.co.za/eng/process",
            "myHost": "http://localhost",
            "itnPath": "/Payfast/ITN",
            "commsToken": "780ff78373d8fb6dc670e058c53cb650",
            "commsTokenIV": "cc4bbe724dfe7a87225350e26543776f",
            "sandboxConfig": {
              "merchantId": "10021844",
              "merchantKey": "5fua4woj28gkh",
              "passphrase": "uh_toot6RAID1gnup"
            }
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-log-gelf",
    "version": "4.0.1",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-gelf",
    "plugins": [
      {
        "type": "logging",
        "name": "log-gelf",
        "def": {
          "key": "log-gelf",
          "name": "Gelf/Graylog",
          "icon": "log-gelf.png",
          "description": "Gelf/Graylog log plugin",
          "badges": [
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-log-gelf"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-log-gelf"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-log-gelf"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-log-gelf/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-log-gelf/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-log-gelf"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-log-gelf"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-log-gelf"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-log-gelf"
            }
          ]
        },
        "config": {
          "interfaceName": "PluginConfig",
          "definitions": {},
          "extraDefinitions": {},
          "defaultValues": {
            "adapterName": "udp",
            "adapterOptions": {
              "host": "127.0.0.1",
              "port": 12201,
              "family": 4,
              "timeout": 10000
            }
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-snmp",
    "version": "0.1.1",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-snmp",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-snmp-client",
        "def": {
          "key": "service-snmp",
          "name": "SNMP Client",
          "icon": "snmp.png",
          "description": "SNMP Client",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-snmp",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-snmp/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-snmp"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-snmp"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-snmp"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-snmp/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-snmp/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-snmp"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-snmp"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-snmp"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-snmp"
            }
          ]
        },
        "config": {
          "interfaceName": "MyPluginConfig",
          "definitions": {
            "maxSessions": {
              "type": "number",
              "required": true,
              "name": "Max Sessions",
              "description": "The maximum amount of sessions to keep"
            },
            "maxSessionTimeout": {
              "type": "number",
              "required": true,
              "name": "Max Session Timeout",
              "description": "The maximum time in MS before a session is autoclosed"
            },
            "maxSessionTimer": {
              "type": "number",
              "required": true,
              "name": "Max Session Interval",
              "description": "The time in MS to run the cleanup"
            }
          },
          "extraDefinitions": {},
          "defaultValues": {
            "maxSessions": 50,
            "maxSessionTimeout": 120000,
            "maxSessionTimer": 60000
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-events-rabbitmq",
    "version": "3.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-events-rabbitmq",
    "plugins": [
      {
        "type": "events",
        "name": "events-rabbitmq",
        "def": {
          "key": "events-rabbitmq",
          "name": "RabbitMQ",
          "icon": "events-rabbitmq.png",
          "description": "RabbitMQ events plugin",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-events-rabbitmq",
              "img": "https://codecov.io/gh/BetterCorp/service-base-events-rabbitmq/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-events-rabbitmq/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-events-rabbitmq/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-events-rabbitmq"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-events-rabbitmq"
            }
          ]
        },
        "config": {
          "interfaceName": "PluginConfig",
          "definitions": {
            "fatalOnDisconnect": {
              "type": "boolean",
              "required": true,
              "name": "Disconnect on error",
              "description": "Cause the bsb service to exit code 1 if the connection drops"
            },
            "prefetch": {
              "type": "number",
              "required": true,
              "name": "Prefetch",
              "description": "The RabbitMQ Prefetch amount"
            },
            "endpoints": {
              "type": "Array<string>",
              "required": true,
              "name": "Endpoints",
              "description": "The list of servers(cluster) to connect too"
            },
            "credentials": {
              "type": "IPluginConfig_Credentials",
              "required": true,
              "name": "Credentials for server authorization",
              "description": null
            },
            "uniqueId": {
              "type": "string",
              "required": false,
              "name": "Unique Client ID",
              "description": "A static client Id - hostname is used when not set"
            }
          },
          "extraDefinitions": {
            "IPluginConfig_Credentials": {
              "username": {
                "type": "string",
                "required": true,
                "name": "Username",
                "description": null
              },
              "password": {
                "type": "string",
                "required": true,
                "name": "Password",
                "description": null
              }
            }
          },
          "defaultValues": {
            "fatalOnDisconnect": true,
            "prefetch": 10,
            "endpoints": [
              "amqp://localhost"
            ],
            "credentials": {
              "username": "guest",
              "password": "guest"
            }
          }
        },
        "pluginLink": "rabbitmq.events.bsbcode.dev"
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-syslog",
    "version": "2.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-syslog",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-syslog-server",
        "def": {
          "key": "service-syslog-server",
          "name": "rSyslog Server",
          "icon": "rsyslog-server.png",
          "description": "syslog server",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-syslog",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-syslog/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-syslog"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-syslog"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-syslog"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-syslog/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-syslog/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-syslog"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-syslog"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-syslog"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-syslog"
            }
          ]
        },
        "config": {
          "interfaceName": "MyPluginConfig",
          "definitions": {
            "port": {
              "type": "number",
              "required": true,
              "name": "Port",
              "description": "The port to bind the server on"
            },
            "address": {
              "type": "string",
              "required": true,
              "name": "Address",
              "description": "127.0.0.1/0.0.0.0 address to bind the server too."
            },
            "exclusive": {
              "type": "boolean",
              "required": true,
              "name": "Exclusive",
              "description": "Is it exclusive"
            }
          },
          "extraDefinitions": {},
          "defaultValues": {
            "port": 514,
            "address": "0.0.0.0",
            "exclusive": false
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-adbud",
    "version": "2.0.1",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-service-adbud",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-adbud",
        "def": {
          "key": "service-adbud",
          "name": "ADBud.io service",
          "icon": "service-adbud.png",
          "description": "ADbud.io service plugin",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-adbud",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-adbud/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-adbud"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-adbud"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-adbud"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-adbud/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-adbud/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-adbud"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-adbud"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-adbud"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-adbud"
            }
          ]
        },
        "config": {
          "interfaceName": "MyPluginConfig",
          "definitions": {},
          "extraDefinitions": {},
          "defaultValues": {}
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-web-server",
    "version": "5.0.4",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-web-server",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-express",
        "def": {
          "key": "service-express",
          "name": "Express Web Server",
          "icon": "express-js.png",
          "description": "ExpressJS NodeJS web server",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-web-server",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-web-server/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-web-server"
            }
          ]
        },
        "config": {
          "interfaceName": "IWebServerConfig",
          "definitions": {
            "host": {
              "type": "string",
              "required": true,
              "name": "Host",
              "description": "127.0.0.1/0.0.0 type host definition"
            },
            "server": {
              "type": "IWebServerConfigServer",
              "required": true,
              "name": "Server Type",
              "description": "HTTP/HTTPS or both"
            },
            "httpPort": {
              "type": "number",
              "required": true,
              "name": "HTTP Server Port",
              "description": "If using the HTTP server, the port to bind to"
            },
            "httpToHttpsRedirect": {
              "type": "boolean",
              "required": true,
              "name": "HTTP to HTTPS redirect",
              "description": "If you are using both HTTP and HTTPS, then we can automatically redirect HTTP to HTTPS"
            },
            "httpsPort": {
              "type": "number",
              "required": true,
              "name": "HTTPS Server Port",
              "description": "If using the HTTPS server, the port to bind to"
            },
            "httpsCert": {
              "type": "string | null",
              "required": true,
              "name": "HTTPS Cert File",
              "description": "The full path for the HTTP certificate file"
            },
            "httpsKey": {
              "type": "string | null",
              "required": true,
              "name": "HTTPS Cert Key File",
              "description": "The full path for the HTTP certificate key file"
            }
          },
          "extraDefinitions": {
            "IWebServerConfigServer": {},
            "string | null": {}
          },
          "defaultValues": {
            "host": "0.0.0.0",
            "httpPort": 80,
            "server": "http",
            "httpToHttpsRedirect": true,
            "httpsPort": 443,
            "httpsCert": null,
            "httpsKey": null
          }
        },
        "pluginLink": null
      },
      {
        "type": "plugin",
        "name": "service-fastify",
        "def": {
          "key": "service-fastify",
          "name": "Fastify Web Server",
          "icon": "fastify-js.png",
          "description": "Fastify NodeJS web server",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-web-server",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-web-server/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-web-server"
            }
          ]
        },
        "config": {
          "interfaceName": "FastifyWebServerConfig",
          "definitions": {
            "cors": {
              "type": "FastifyCors",
              "required": true,
              "name": null,
              "description": null
            },
            "rateLimit": {
              "type": "FastifyRateLimit",
              "required": true,
              "name": null,
              "description": null
            },
            "ipRewrite": {
              "type": "boolean",
              "required": true,
              "name": "Rewrite the IP",
              "description": "For Cloudflare and proxies"
            },
            "host": {
              "type": "string",
              "required": true,
              "name": "Host",
              "description": "127.0.0.1/0.0.0 type host definition"
            },
            "server": {
              "type": "IWebServerConfigServer",
              "required": true,
              "name": "Server Type",
              "description": "HTTP/HTTPS or both"
            },
            "httpPort": {
              "type": "number",
              "required": true,
              "name": "HTTP Server Port",
              "description": "If using the HTTP server, the port to bind to"
            },
            "httpToHttpsRedirect": {
              "type": "boolean",
              "required": true,
              "name": "HTTP to HTTPS redirect",
              "description": "If you are using both HTTP and HTTPS, then we can automatically redirect HTTP to HTTPS"
            },
            "httpsPort": {
              "type": "number",
              "required": true,
              "name": "HTTPS Server Port",
              "description": "If using the HTTPS server, the port to bind to"
            },
            "httpsCert": {
              "type": "string | null",
              "required": true,
              "name": "HTTPS Cert File",
              "description": "The full path for the HTTP certificate file"
            },
            "httpsKey": {
              "type": "string | null",
              "required": true,
              "name": "HTTPS Cert Key File",
              "description": "The full path for the HTTP certificate key file"
            }
          },
          "extraDefinitions": {
            "FastifyCors": {
              "enabled": {
                "type": "boolean",
                "required": true,
                "name": "Enabled",
                "description": "If CORS is enabled"
              },
              "options": {
                "type": "FastifyCorsOptions",
                "required": true,
                "name": null,
                "description": null
              }
            },
            "FastifyRateLimit": {
              "enabled": {
                "type": "boolean",
                "required": true,
                "name": "Enabled",
                "description": "If rate limiting is enabled"
              },
              "options": {
                "type": "RateLimitOptions",
                "required": true,
                "name": null,
                "description": null
              }
            },
            "IWebServerConfigServer": {},
            "string | null": {}
          },
          "defaultValues": {
            "host": "0.0.0.0",
            "httpPort": 80,
            "ipRewrite": true,
            "server": "http",
            "httpToHttpsRedirect": true,
            "httpsPort": 443,
            "httpsCert": null,
            "httpsKey": null,
            "cors": {
              "enabled": false,
              "options": {
                "origin": true,
                "allowedHeaders": "content-type",
                "methods": "GET,POST,PUT,PATCH,DELETE,OPTIONS",
                "credentials": false,
                "maxAge": 13000,
                "preflightContinue": false,
                "optionsSuccessStatus": 200,
                "preflight": true,
                "strictPreflight": false
              }
            },
            "rateLimit": {
              "enabled": false,
              "options": {
                "max": 500,
                "timeWindow": "15 minute"
              }
            }
          }
        },
        "pluginLink": null
      },
      {
        "type": "plugin",
        "name": "service-webjwt",
        "def": {
          "key": "service-webjwt",
          "name": "WebJWT",
          "icon": "web-jwt.png",
          "description": "WebJWT NodeJS plugin",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-web-server",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-web-server/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-web-server/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-web-server"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-web-server"
            }
          ]
        },
        "config": {
          "interfaceName": "IEJWTPluginConfig",
          "definitions": {
            "keyUrl": {
              "type": "string",
              "required": true,
              "name": "Key URL",
              "description": "JWT Signing key url"
            },
            "bearerStr": {
              "type": "string",
              "required": true,
              "name": "Bearer String",
              "description": "Changes auth header 'Bearer (token)' value"
            },
            "authKey": {
              "type": "string",
              "required": true,
              "name": "Auth Key",
              "description": "For using secret key signing"
            },
            "secretKey": {
              "type": "string",
              "required": true,
              "name": "Secret Key",
              "description": "Signing key"
            },
            "authType": {
              "type": "IEJWTPluginAuthType",
              "required": true,
              "name": "Auth Type",
              "description": "Type of signing to do"
            },
            "queryKey": {
              "type": "string",
              "required": true,
              "name": "Query Key",
              "description": "For WebServers to use query string auth instead of header auth"
            },
            "options": {
              "type": "VerifyOptions",
              "required": true,
              "name": "Options",
              "description": "Signing options"
            },
            "tokenLifespanMinutes": {
              "type": "number",
              "required": true,
              "name": "Token Lifespan",
              "description": "Token lifespan in minutes"
            },
            "defaultTokenType": {
              "type": "EJWTTokenType",
              "required": true,
              "name": "Default Token Type",
              "description": "The default web server token validation type"
            },
            "allowedTokenTypes": {
              "type": "Array<EJWTTokenType>",
              "required": true,
              "name": "Allowed Token Types",
              "description": "If clients should only use certain types of tokens (header/query etc...)"
            }
          },
          "extraDefinitions": {
            "IEJWTPluginAuthType": {},
            "VerifyOptions": {
              "algorithms": {
                "type": "Algorithm[] | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "audience": {
                "type": "string | RegExp | Array<string | RegExp> | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "clockTimestamp": {
                "type": "number | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "clockTolerance": {
                "type": "number | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "complete": {
                "type": "boolean | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "issuer": {
                "type": "string | string[] | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "ignoreExpiration": {
                "type": "boolean | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "ignoreNotBefore": {
                "type": "boolean | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "jwtid": {
                "type": "string | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "nonce": {
                "type": "string | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "subject": {
                "type": "string | undefined",
                "required": false,
                "name": null,
                "description": null
              },
              "maxAge": {
                "type": "string | number | undefined",
                "required": false,
                "name": null,
                "description": null
              }
            },
            "EJWTTokenType": {}
          },
          "defaultValues": {
            "keyUrl": "/auth/realms/RealmName/protocol/openid-connect/certs",
            "bearerStr": "Bearer",
            "authKey": "$2b$08$DIR5cOdb7r0n9jbHsov59.",
            "secretKey": "$2b$08$1eDrYDCcXGLFO2FW4OZuPe",
            "queryKey": "passtk",
            "authType": "JWTCERTS",
            "options": {
              "algorithms": [
                "RS256"
              ],
              "issuer": "/auth/realms/RealmName",
              "audience": "account"
            },
            "tokenLifespanMinutes": 60,
            "defaultTokenType": "reqOrQuery",
            "allowedTokenTypes": [
              "reqOrQuery",
              "req",
              "query"
            ]
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-config-1password",
    "version": "4.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-1password",
    "plugins": [
      {
        "type": "config",
        "name": "config-1password",
        "def": {
          "key": "config-1password",
          "name": "1Password",
          "icon": "1password.png",
          "description": "1Password events plugin"
        },
        "config": null,
        "pluginLink": null
      },
      {
        "type": "plugin",
        "name": "service-1password",
        "def": {
          "key": "service-1password",
          "name": "1Password",
          "icon": "1password.png",
          "description": "1Password secrets automation"
        },
        "config": {
          "interfaceName": "MyPluginConfig",
          "definitions": {
            "serverUrl": {
              "type": "string",
              "required": true,
              "name": "Server URL",
              "description": "The server URL for the 1password connect service"
            },
            "token": {
              "type": "string",
              "required": true,
              "name": "Token",
              "description": null
            },
            "vaultId": {
              "type": "string",
              "required": true,
              "name": "Vault ID",
              "description": null
            },
            "lockToVault": {
              "type": "boolean",
              "required": true,
              "name": "Vault lock",
              "description": "Lock access to a specific vault ID"
            }
          },
          "extraDefinitions": {},
          "defaultValues": {
            "serverUrl": "http://localhost",
            "token": "localhost",
            "vaultId": "localhost"
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-splynx",
    "version": "2.0.2",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-splynx",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-splynx",
        "def": {
          "key": "service-splynx",
          "name": "Splynx",
          "icon": "splynx.png",
          "description": "Splynx ISP CRM",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-splynx",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-splynx/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-splynx"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-splynx"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-splynx"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-splynx/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-splynx/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-splynx"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-splynx"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-splynx"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-splynx"
            }
          ]
        },
        "config": {
          "interfaceName": "ISplynxPluginConfig",
          "definitions": {
            "webhooks": {
              "type": "boolean",
              "required": true,
              "name": "Webhooks",
              "description": "Enable inbound webhooks (Not available yet)"
            },
            "clientEndpointKey": {
              "type": "string",
              "required": true,
              "name": "Client Key",
              "description": "Inbound URL key for WebHooks"
            },
            "multiTenant": {
              "type": "boolean",
              "required": true,
              "name": "Multi-Tenant Mode",
              "description": "If false, Client Key is used to lock down webhooks"
            },
            "myHost": {
              "type": "string",
              "required": true,
              "name": "My Host",
              "description": "My hosts URL"
            },
            "serverConfig": {
              "type": "IServerConfig",
              "required": false,
              "name": "Server Config",
              "description": "If not running in multi-tenant config, you can define the splynx details here"
            }
          },
          "extraDefinitions": {
            "IServerConfig": {
              "hostname": {
                "type": "string",
                "required": true,
                "name": null,
                "description": null
              },
              "version": {
                "type": "ISplynxAPIVersion",
                "required": true,
                "name": null,
                "description": null
              },
              "username": {
                "type": "string",
                "required": true,
                "name": null,
                "description": null
              },
              "password": {
                "type": "string",
                "required": true,
                "name": null,
                "description": null
              }
            }
          },
          "defaultValues": {
            "webhooks": false,
            "clientEndpointKey": "JDJiJDA0JFVtQUk5VUwuYzN4bFEvMXoudzF1Z3UkMmIkMDQkVW1BSTlVTC5jM3hsUS8xei53MXVndSQyYiQwNCRVbUFJOVVMLmMzeGxRLzF6LncxdWd1",
            "multiTenant": false,
            "myHost": "http://localhost"
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-yoco",
    "version": "4.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-yoco",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-yoco",
        "def": {
          "key": "service-yoco",
          "name": "Yoco",
          "icon": "yoco.png",
          "description": "Yoco payment gateway",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-yoco",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-yoco/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-yoco"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-yoco"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-yoco"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-yoco/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-yoco/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-yoco"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-yoco"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-yoco"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-yoco"
            }
          ]
        },
        "config": {
          "interfaceName": "YocoPluginConfig",
          "definitions": {
            "myHost": {
              "type": "string",
              "required": true,
              "name": "My Host",
              "description": "like https"
            },
            "commsToken": {
              "type": "string",
              "required": true,
              "name": "Comms Token",
              "description": "** Special encryption token"
            },
            "commsTokenIV": {
              "type": "string",
              "required": true,
              "name": "Comms Token IV",
              "description": "** Special encryption token"
            },
            "sandboxConfig": {
              "type": "YocoSandboxConfig",
              "required": true,
              "name": "Sandbox Config",
              "description": "Default/test config"
            }
          },
          "extraDefinitions": {
            "YocoSandboxConfig": {
              "publicKey": {
                "type": "string",
                "required": true,
                "name": "Public Key",
                "description": null
              },
              "secretKey": {
                "type": "string",
                "required": true,
                "name": "Secret Key",
                "description": null
              }
            }
          },
          "defaultValues": {
            "myHost": "http://localhost",
            "commsToken": "ac44f1e9a6ad804dc17fce2fd5884638",
            "commsTokenIV": "b0a1c8147bba59a8afe869896f24de2a",
            "sandboxConfig": {
              "publicKey": "pk_test_ed3c54a6gOol69qa7f45",
              "secretKey": "sk_test_960bfde0VBrLlpK098e4ffeb53e1"
            }
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-push",
    "version": "3.0.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-push",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-push-server",
        "def": {
          "key": "service-push-server",
          "name": "Web Push Server",
          "icon": "push-server.png",
          "description": "Web Push Protocol Server",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-push",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-push/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-push"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-push"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-push"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-push/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-push/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-push"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-push"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-push"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-push"
            }
          ],
          "requiredPackagesForConfig": [
            "web-push"
          ]
        },
        "config": {
          "interfaceName": "IPushPluginConfig",
          "definitions": {
            "publicKey": {
              "type": "string",
              "required": true,
              "name": "VAPID Public Key",
              "description": null
            },
            "privateKey": {
              "type": "string",
              "required": true,
              "name": "VAPID Private Key",
              "description": null
            },
            "email": {
              "type": "string",
              "required": true,
              "name": "Company Email",
              "description": null
            },
            "host": {
              "type": "string",
              "required": true,
              "name": "My Host",
              "description": null
            },
            "serviceWorkerJSPath": {
              "type": "string",
              "required": true,
              "name": "Service worker path",
              "description": "The /sw.js path on the client app"
            }
          },
          "extraDefinitions": {},
          "defaultValues": {
            "publicKey": "BLbqwKJg6sbpQZDcVsQsZBaDyB2zAZXZgTfsV_VO001nJgYYLRO_BcCR7Sc-eqhVdhKGvAytVi38RA3ZURNK8H8",
            "privateKey": "dju8FrHp2a1jFRtegkkIHaCFa2EC8OnUJYxH9nmvpI4",
            "email": "test@example.com",
            "host": "http://localhost",
            "serviceWorkerJSPath": "/sw.js"
          }
        },
        "pluginLink": null
      }
    ]
  },
  {
    "name": "@bettercorp/service-base-plugin-netflow",
    "version": "2.1.0",
    "author": {
      "name": "BetterCorp",
      "url": "https://github.com/BetterCorp",
      "avatar": "https://avatars.githubusercontent.com/u/22332366?v=4"
    },
    "github": "https://github.com/BetterCorp/service-base-plugin-netflow",
    "plugins": [
      {
        "type": "plugin",
        "name": "service-netflow",
        "def": {
          "key": "service-netflow",
          "name": "Netflow",
          "icon": "service-netflow.png",
          "description": "Netflow traffic plugin",
          "badges": [
            {
              "url": "https://codecov.io/gh/BetterCorp/service-base-service-netflow",
              "img": "https://codecov.io/gh/BetterCorp/service-base-service-netflow/branch/master/graph/badge.svg"
            },
            {
              "img": "https://img.shields.io/github/license/BetterCorp/service-base-service-netflow"
            },
            {
              "img": "https://img.shields.io/snyk/vulnerabilities/github/BetterCorp/service-base-service-netflow"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-netflow"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-netflow/actions/workflows/develop.yml/badge.svg?branch=develop"
            },
            {
              "img": "https://github.com/BetterCorp/service-base-service-netflow/actions/workflows/master.yml/badge.svg?branch=master"
            },
            {
              "img": "https://img.shields.io/github/issues-raw/BetterCorp/service-base-service-netflow"
            },
            {
              "img": "https://img.shields.io/npm/dt/@bettercorp/service-base-service-netflow"
            },
            {
              "img": "https://img.shields.io/bundlephobia/min/@bettercorp/service-base-service-netflow"
            },
            {
              "img": "https://img.shields.io/npm/v/@bettercorp/service-base-service-netflow"
            }
          ]
        },
        "config": {
          "interfaceName": "MyPluginConfig",
          "definitions": {
            "port": {
              "type": "number",
              "required": true,
              "name": "Netflow Server Port",
              "description": "The port to which to host the netflow server on"
            }
          },
          "extraDefinitions": {},
          "defaultValues": {
            "port": 2055
          }
        },
        "pluginLink": null
      }
    ]
  }
]